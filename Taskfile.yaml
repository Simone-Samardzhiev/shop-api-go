version: '3'

vars:
  MIGRATIONS_PATH: "./internal/adapter/storage/postgres/migrations"

dotenv:
  - .env

tasks:
  migrate-up:
    desc: "Applies all pending migrations."
    cmd: migrate -path {{.MIGRATIONS_PATH}} -database "{{.DATABASE_URL}}" up

  migrate-down:
    desc: "Reverts the last applied migration."
    cmd: migrate -path {{.MIGRATIONS_PATH}} -database "{{.DATABASE_URL}}" down 1

  migrate-down-all:
    desc: "Reverts all migrations."
    cmd: migrate -path {{.MIGRATIONS_PATH}} -database "{{.DATABASE_URL}}" down

  migrate-create:
    desc: "Creates a new up/down migration file."
    vars:
      MIGRATION_NAME: '{{.NAME | default "new_migration"}}'
    cmd: migrate create -ext sql -dir {{.MIGRATIONS_PATH}} -seq {{.MIGRATION_NAME}}

  migrate-force:
    desc: "Forces the database version to a specific V, ignoring dirty state."
    vars:
      TARGET_VERSION: '{{.VERSION | default "-1"}}'
    cmd: migrate -path {{.MIGRATIONS_PATH}} -database "{{.DATABASE_URL}}" force {{.TARGET_VERSION}}

  swag-init:
    desc: "Generate swagger dock using swag"
    cmd: swag init -g cmd/http/main.go -o docs/ --parseInternal

  run-api:
    desc: "Starts the API"
    cmds:
      - go build -o bin/http ./cmd/http
      - ./bin/http

  run-setup:
    desc: "Starts the setup CLI"
    cmds:
      - go build -o bin/setup ./cmd/setup
      - ./nin/setup


