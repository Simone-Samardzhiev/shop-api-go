// Code generated by MockGen. DO NOT EDIT.
// Source: internal/core/port/admin.go
//
// Generated by this command:
//
//	mockgen -source=internal/core/port/admin.go -destination=internal/core/port/mock/admin.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	domain "shop-api-go/internal/core/domain"

	gomock "go.uber.org/mock/gomock"
)

// MockAdminService is a mock of AdminService interface.
type MockAdminService struct {
	ctrl     *gomock.Controller
	recorder *MockAdminServiceMockRecorder
	isgomock struct{}
}

// MockAdminServiceMockRecorder is the mock recorder for MockAdminService.
type MockAdminServiceMockRecorder struct {
	mock *MockAdminService
}

// NewMockAdminService creates a new mock instance.
func NewMockAdminService(ctrl *gomock.Controller) *MockAdminService {
	mock := &MockAdminService{ctrl: ctrl}
	mock.recorder = &MockAdminServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdminService) EXPECT() *MockAdminServiceMockRecorder {
	return m.recorder
}

// GetUsers mocks base method.
func (m *MockAdminService) GetUsers(ctx context.Context, token *domain.Token, get *domain.GetUsers) (*domain.UsersResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers", ctx, token, get)
	ret0, _ := ret[0].(*domain.UsersResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockAdminServiceMockRecorder) GetUsers(ctx, token, get any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockAdminService)(nil).GetUsers), ctx, token, get)
}

// UpdateUser mocks base method.
func (m *MockAdminService) UpdateUser(ctx context.Context, token *domain.Token, update *domain.UserUpdate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUser", ctx, token, update)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUser indicates an expected call of UpdateUser.
func (mr *MockAdminServiceMockRecorder) UpdateUser(ctx, token, update any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUser", reflect.TypeOf((*MockAdminService)(nil).UpdateUser), ctx, token, update)
}
